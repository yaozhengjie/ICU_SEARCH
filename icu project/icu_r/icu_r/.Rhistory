str_extract_all(noteevent_100$text[1],"PAST MEDICAL HISTORY:\n(\\d|\\D)+\n+")
str_extract_all(noteevent_100$text[1],"PAST MEDICAL HISTORY:\n(\\d|\\D)+")
str_extract_all(noteevent_100$text[1],"PAST MEDICAL HISTORY:\n(\\d|\\D|\n)+")
str_extract_all(noteevent_100$text[1],"PAST MEDICAL HISTORY:\n(\\d|\\D|\\n)+")
str_extract_all(noteevent_100$text[1],"PAST MEDICAL HISTORY:\n(\\d|\\D|\\n{2})+")
str_extract_all(noteevent_100$text[1],"PAST MEDICAL HISTORY:\n(\\d|\\D|\n{2})+")
str_extract_all(noteevent_100$text[1],"PAST MEDICAL HISTORY:\n(\n{2}|\\d|\\D)+")
str_extract_all(noteevent_100$text[1],"PAST MEDICAL HISTORY:\n(\\n{2}|\\d|\\D)+")
raw.data <- "555-1239Moe Szyslak(636) 555-0113Burns, C. Montgomery555-6542Rev. Timothy Lovejoy555 8904Ned Flanders636-555-3226Simpson, Homer5543642Dr. Julius Hibbert"
name <- unlist(str_extract_all(raw.data, "[[:alpha:]., ]{2,}"))
name
str_extract_all(raw.data, "Moe.Szyslak"
)
str_extract_all(raw.data, ignore.case("Moe.Szyslak"))
str_extract_all(raw.data, ignore.case("Moe Szyslak"))
str_extract_all(raw.data, ignore.case("Moe.Szyslak"))
str_extract_all(raw.data, fixed("Moe.Szyslak"))
str_extract_all(raw.data, "Moe.Szyslak")
str_extract_all(raw.data, "Moe.zyslak")
str_extract_all(raw.data, "Moe..Szyslak")
str_extract_all(raw.data, "Moe. Szyslak")
str_extract_all(raw.data, "Moe Szyslak")
phone <- unlist(str_extract_all(raw.data, "\\(?(\\d{3})?\\)?(-| )?\\d{3}(-| )?\\d{4}"))
phone
phone <- unlist(str_extract_all(raw.data, "\(?(\\d{3})?\)?(-| )?\\d{3}(-| )?\\d{4}"))
example.obj <- "1. A small sentence. - 2. Another tiny sentence."
str_extract("François Hollande", "Fran[a-z]ois")
str_extract("François Hollande", "Fran[[:alpha:]]ois")
str_extract("François Hollande", "Fran[[:alpha:]]ois")
str_extract(example.obj, "s[[:alpha:]][[:alpha:]][[:alpha:]]")
str_extract(example.obj, "s[:alpha:]")
str_extract(example.obj, "s[:alpha:][:alpha:]")
str_extract(example.obj, "s[:alpha:][:alpha:][:alpha:]")
str_extract(example.obj, "s[:alpha:]{3}")
str_extract(example.obj, "s[:alpha:]{5}")
str_extract(example.obj, "s[:alpha:]+")
str_extract(example.obj, "s[:alpha:]*")
str_extract(example.obj, "s[:alpha:].")
str_extract(example.obj, "s[:alpha:].*")
str_extract(example.obj, "A.+sentence")
str_extract(example.obj, "A.+?sentence")
unlist(str_extract_all(example.obj, "(.en){1,5}"))
unlist(str_extract_all(example.obj, fixed(".")))
unlist(str_extract_all(example.obj, fixed(.)))
unlist(str_extract_all(example.obj, "\\w+"))
unlist(str_extract_all(example.obj, "\\W+"))
unlist(str_extract_all(example.obj, "e\\>"))
example.obj
unlist(str_extract_all(example.obj, "e\\>"))
unlist(str_extract_all(example.obj, "e\\<"))
unlist(str_extract_all(example.obj, "e\\b"))
str_extract(example.obj, "([[:alpha:]]).+?\\1")
str_extract(example.obj, "(\\<[b-z]+\\>).+?\\1")
str_extract_all(noteevent_100$text[1],"PAST MEDICAL HISTORY:\n(\\d|\\D)+\n\n")
str_extract_all(noteevent_100$text[1],"PAST MEDICAL HISTORY:\n[^:]+")
zz = str_extract_all(noteevent_100$text,"PAST MEDICAL HISTORY:\n[^:]+")
zz
zz = str_extract_all(noteevent_100$text[1],"(PAST MEDICAL HISTORY:|Past Medical History:)\n[^:]+")
zz
zz = str_extract_all(noteevent_100$text[1],"((PAST MEDICAL HISTORY:)|(Past Medical History:))\n[^:]+")
zz
zz = str_extract_all(noteevent_100$text[1],"(PAST MEDICAL HISTORY:)?(Past Medical History:)?\n[^:]+")
zz
zz = str_extract_all(noteevent_100$text[1],"PAST MEDICAL HISTORY:\n[^:]+|Past Medical History:\n[^:]+")
zz
zz = str_extract_all(noteevent_100$text[1],"(PAST MEDICAL HISTORY:\n[^:]+)|(Past Medical History:\n[^:]+)")
zz
zz = str_extract_all(noteevent_100$text,"PAST MEDICAL HISTORY:\n[^:]+|Past Medical History:\n[^:]+")
zz
zz = unlist(str_extract_all(noteevent_100$text,"PAST MEDICAL HISTORY:\n[^:]+|Past Medical History:\n[^:]+"))
zz
ee = data.frame(noteevent_100,zz)
zz = str_extract_all(noteevent_100$text[1],"(PAST MEDICAL HISTORY:\n[^:]+)|(Past Medical History:\n[^:]+)")
dim(zz)
zz
zz = str_extract_all(noteevent_100$text,"(PAST MEDICAL HISTORY:\n[^:]+)|(Past Medical History:\n[^:]+)")
zz
ee = data.frame(noteevent_100,zz)
ee = data.frame(noteevent_100,unlist(zz)
)
na.omit(zz)
?lapply
x <- list(a = 1:10, beta = exp(-3:3), logic = c(TRUE,FALSE,FALSE,TRUE))
x
lapply(x, mean)
lapply(x, paste)
lapply(zz, paste)
zz
zz[1]
zz[105]
class(zz[105])
zz[105] = character(0)
zz[105] == character(0)
zz[105] == NULL
zz[105] == NA
zz[[105]] == NA
zz[[105]] == NULL
zz[[105]] == character(0)
zz[[105]] != character(0)
1 == 1
1 == 0
zz[[105]]
zz
class(zz)
mode(zz)
ff = do.call(c, zz)
ff
write.table(ff,file="fenxi95.csv",sep =",",row.names = FALSE)
ff = rep(NA,106)
ff
ff = list(ff)
ff
a = character(0)
a
a == character(0)
numeric(0) != numeric(0)
numeric(0) == numeric(0)
is.logical(a)
is.logical(NA)
is.logical(NULL)
ff
class(a)
class(ff)
class(ff[1])
class(ff[[1]])
mode(ff[[1]])
ff = as.character(ff)
ff
zz
ff = rep(NA,106)
for(i in 1:106){
if (is.logical(zz[[i]]) = TRUE)
ff[i] = zz[[i]]
else
ff[i] = NULL
}
for(i in 1:106){
if (is.logical(zz[[i]]) == TRUE)
ff[i] = zz[[i]]
else
ff[i] = NULL
}
ff
is.logical(zz[[1]])
zz
is.logical(zz[[1]])
is.logical(zz[[2]])
is.logical(zz[[2]][1])
is.logical(zz[[2]][1])
is.logical(zz[[1]][1])
zz[[1]][1]
zz[[1]][1]
is.logical(3)
is.logical(1)
is.logical(TRUE)
is.logical(0)
is.na("3")
is.na(NA)
is.na(character(0))
is.na(character(0)) == logical(0)
is.character(character(0))
character(0) == character(0)
zz
zz[[103]]
zz[[103]][1]
lapply(zz,paste)
?lapply
lapply(x, mean)
ww = lapply(x, mean)
class(ww)
sapply(x,mean)
ww = sapply(x,mean)
class(ww)
mode(ww)
sapply(zz,paste)
sapply(zz,paste0)
length(zz)
length(zz[[1]])
length(zz[[2]])
length(zz[[4]])
length(zz[[103]])
ff
ff = rep(NA,106)
for(i in 1:106){
if (length(zz[[i]]) == 0)
ff[i] = NULL
else
ff[i] = zz[[i]][1]
}
ff
ff
ff = rep(NA,106)
for(i in 1:106){
if (length(zz[[i]]) == 0)
ff[i] = NA
else
ff[i] = zz[[i]][1]
}
ff
identical(a,character((0)))
ff
noteevent_100_1 =  data.frame(noteevent_100,ff)
View(noteevent_100_1)
noteevent_100_2 = noteevent_100_1[1,2,3,4]
noteevent_100_2 = noteevent_100_1[c(1,2,3),]
View(noteevent_100_2)
noteevent_100_2 = noteevent_100_1[c(1,2,3,4,"ff"),]
View(noteevent_100_2)
noteevent_100_2 = noteevent_100_1[,c(1,2,3,4,"ff")]
noteevent_100_2 = noteevent_100_1[,c(1,2,3,4)]
noteevent_100_2 = noteevent_100_1[,c(1,2,3,4,12)]
View(noteevent_100_2)
write.table(noteevent_100_2,file="fenxi95.csv",sep =",",row.names = FALSE)
？str_extract()
?str_extract()
str_extract(shopping_list, "\\d")
shopping_list <- c("apples x4", "bag of flour", "bag of sugar", "milk x2")
str_extract(shopping_list, "\\d")
str_extract(shopping_list, "\d")
str_extract(shopping_list, "\")
)
q
;
;
)
;
''
""
"
a = c(1:10)
a
which(a>5)
b = which(a>5)
b
a[which(a>5)]
?identical
identical(1, NULL)
str_extract_all(noteevent_100$text[1],"PAST MEDICAL HISTORY:\n[^:]+|Past Medical History:\n[^:]+")
str_extract_all(noteevent_100$text[4],"PAST MEDICAL HISTORY:\n[^:]+|Past Medical History:\n[^:]+")
ff
nchar(ff[1])
nchar(ff>50)
?nchar
x <- c("asfef", "qwerty", "yuiop[", "b", "stuff.blah.yech")
nchar(x)
nchar(ff)
nchar(ff>100)
str_length(ff>100)
stopifnot(identical(nchar(x     ), nchar(x, keepNA= TRUE)),
identical(nchar(x, "w"), nchar(x, keepNA=FALSE)),
identical(is.na(x), is.na(nchar(x))))
?stop
iter <- 12
try(if(iter > 10) stop("too many iterations"))
?%>%
rev("123")
?rev
x <- c(1:5, 5:3)
rev(x)
install.packages("Biostrings")
install.packages("IRanges")
install.packages("Kmisc")
library(Kmisc)
str_rev("123")
stri_reverse("abcdef")
library(stringi)
stri_reverse("abcdef")
pp = stri_reverse(ff)
pp
pp
oo = str_extract(pp,"[^[:space:]]")
oo
oo = str_extract(pp,"[^[:space:]]+")
oo
oo = str_extract(pp,".+\n")
oo
oi = stri_reverse(oo)
oi
factor(oi)
hist(oi)
oi = factor(oi)
hist(oi)
oi
levels(oi)
table(oi)
we = nchar(ff>50)
we
which(is.na(we))
noteevent_100_2 = data.frame(noteevent_100,ff)
View(noteevent_100_2)
oii = data.frame(noteevent_100_2,oi)
View(oii)
oii = data.frame(noteevent_100_2,oi,we)
View(oii)
nchar(ff)
oii = data.frame(noteevent_100_2,oi,we)
View(oii)
we = nchar(ff)
oii = data.frame(noteevent_100_2,oi,we)
View(oii)
table(we)
wee = ifelse(we>50,we,NA)
oii = data.frame(noteevent_100_2,oi,we,wee)
View(oii)
sss = subset(noteevent_100_2,we > 0 and we < 50)
?subset
sss = subset(noteevent_100_2,we < 50)
View(sss)
sss = subset(oii,we < 50)
sss
View(sss)
View(noteevent_100_2)
write.table(noteevent_100_2,file="fenxi106.csv",sep =",",row.names = FALSE)
write.table(noteevent_100_2,file="fenxi106.csv",sep =",",row.names = FALSE)
write.csv(noteevent_100_2,file="fenxi106.csv",row.names = FALSE)
notetext = dbGetQuery(con,"SELECT * FROM mimiciii.notetext")
library(RPostgreSQL)
m <- dbDriver("PostgreSQL")
con <- dbConnect(m, user="postgres", password="huayin303",host="10.73.7.139", dbname="mimicv14")
notetext = dbGetQuery(con,"SELECT * FROM mimiciii.notetext")
View(notetext)
write.csv(notetext,file="notetext.csv",row.names = FALSE)
library(stringi)
library(stringR)
library(stringr)
notetext_nchar = nchar(notetext$newtxt)
which(is.na(notetext_nchar))
notetext_nchar_we = ifelse(notetext_nchar>50,notetext$newtxt,NA)
#截取数据流向,反向处理
notetext_nchar_pp = stri_reverse(notetext_nchar_we)
notetext_nchar_oo = str_extract(notetext_nchar_pp,".+\n")
notetext_nchar_oi = stri_reverse(notetext_nchar_oo)
notetext_nchar_oi = factor(notetext_nchar_oi)
#善用sort，便于显示
notetext_freq  = sort(table(notetext_nchar_oi))
#提取出相对应的项目
notetext_new = data.frame(notext,notetext_nchar_oi)
write.csv(data.frame(notetext_freq),file="notetext_freq.csv",row.names = FALSE)
notetext_new = data.frame(notetext,notetext_nchar_oi)
write.csv(data.frame(notetext_freq),file="notetext_freq.csv",row.names = FALSE)
devtools::install_github('wch/R6', build_vignettes = FALSE)
install.packages(devtools)
install.packages("devtools")
library(devtools)
devtools::install_github('wch/R6', build_vignettes = FALSE)
devtools::install_github('wch/R6')
notetext = dbGetQuery(con,"SELECT * FROM mimiciii.notetext_sepsis3018")
library(RPostgreSQL)
con <- dbConnect(m, user="postgres", password="huayin303",host="10.73.7.139", dbname="mimicv14")
m <- dbDriver("PostgreSQL")
con <- dbConnect(m, user="postgres", password="huayin303",host="10.73.7.139", dbname="mimicv14")
notetext = dbGetQuery(con,"SELECT * FROM mimiciii.notetext_sepsis3018")
write.csv(notetext,file="notetext.csv",row.names = FALSE)
##数据库已经做好了处理的工作
notetext_nchar = nchar(notetext$newtxt)
which(is.na(notetext_nchar))
notetext_nchar_we = ifelse(notetext_nchar>50,notetext$newtxt,NA)
#截取数据流向,反向处理
notetext_nchar_pp = stri_reverse(notetext_nchar_we)
notetext_nchar_oo = str_extract(notetext_nchar_pp,".+\n")
notetext_nchar_oi = stri_reverse(notetext_nchar_oo)
notetext_nchar_oi = factor(notetext_nchar_oi)
#善用sort，便于显示
notetext_freq  = sort(table(notetext_nchar_oi))
#提取出相对应的项目
notetext_new = data.frame(notetext,notetext_nchar_oi)
write.csv(data.frame(notetext_freq),file="notetext_freq.csv",row.names = FALSE)
dim(notetext)
View(notetext_new)
View(notetext_freq)
readline(notetext_freq)
notetext_freq = data.frame(notetext_freq)
str_sub(notetext_freq$notetext_nchar_oi,start = 1, end = 2)
str_sub(notetext_freq$notetext_nchar_oi,start = , end = 3)
str_sub(notetext_freq$notetext_nchar_oi,start = 2 , end = 3)
str_detect(subtext,"[[:alpha:]]")
subtext = str_sub(notetext_freq$notetext_nchar_oi,start = 2 , end = 3)
str_detect(subtext,"[[:alpha:]]")
ifelse(str_detect(subtext,"[[:alpha:]]"),1,0 )
which(result_sub == 1)
result_sub = ifelse(str_detect(subtext,"[[:alpha:]]"),1,0 )
which(result_sub == 1)
notetext[which(result_sub == 1),]
View(notetext[which(result_sub == 1),])
notetext_freq$notetext_nchar_oi[which(result_sub == 1),]
notetext_freq$notetext_nchar_oi[which(result_sub == 1)]
notetext_freq[which(result_sub == 1)]
notetext_freq[which(result_sub == 1),]
View(notetext_freq)
View(notetext_freq[which(result_sub == 1),])
subtext = str_sub(notetext_freq$notetext_nchar_oi,start = 2 , end = 2)
result_sub = ifelse(str_detect(subtext,"[[:alpha:]]"),1,0 )
notetext[which(result_sub == 1),]
notetext_freq[which(result_sub == 1),]
View(notetext_freq[which(result_sub == 1),])
notetext_nchar_oi
write.csv(notetext_freq[which(result_sub == 1),],file="notetext111.csv",row.names = FALSE)
notetext_nchar_we = ifelse(notetext_nchar>100,notetext$newtxt,NA)
#截取数据流向,反向处理
notetext_nchar_pp = stri_reverse(notetext_nchar_we)
notetext_nchar_oo = str_extract(notetext_nchar_pp,".+\n")
notetext_nchar_oi = stri_reverse(notetext_nchar_oo)
notetext_nchar_oi = factor(notetext_nchar_oi)
#善用sort，便于显示
notetext_freq  = sort(table(notetext_nchar_oi))
#提取出相对应的项目
notetext_new = data.frame(notetext,notetext_nchar_oi)
notetext_freq = data.frame(notetext_freq)
write.csv(notetext_freq,file="notetext_freq.csv",row.names = FALSE)
###choose the attributes which not start with -,or num [[:alpha:]]
subtext = str_sub(notetext_freq$notetext_nchar_oi,start = 2 , end = 2)
result_sub = ifelse(str_detect(subtext,"[[:alpha:]]"),1,0 )
notetext[which(result_sub == 1),]
#展示的数据点，就是不以开头的数据
notetext_freq[which(result_sub == 1),]
write.csv(notetext_freq[which(result_sub == 1),],file="notetext111.csv",row.names = FALSE)
which(is.na(notetext_nchar))
notetext_nchar_we = ifelse(notetext_nchar>200,notetext$newtxt,NA)
#截取数据流向,反向处理
notetext_nchar_pp = stri_reverse(notetext_nchar_we)
notetext_nchar_oo = str_extract(notetext_nchar_pp,".+\n")
notetext_nchar_oi = stri_reverse(notetext_nchar_oo)
notetext_nchar_oi = factor(notetext_nchar_oi)
#善用sort，便于显示
notetext_freq  = sort(table(notetext_nchar_oi))
#提取出相对应的项目
notetext_new = data.frame(notetext,notetext_nchar_oi)
notetext_freq = data.frame(notetext_freq)
write.csv(notetext_freq,file="notetext_freq.csv",row.names = FALSE)
###choose the attributes which not start with -,or num [[:alpha:]]
subtext = str_sub(notetext_freq$notetext_nchar_oi,start = 2 , end = 2)
result_sub = ifelse(str_detect(subtext,"[[:alpha:]]"),1,0 )
notetext[which(result_sub == 1),]
#展示的数据点，就是不以开头的数据
notetext_freq[which(result_sub == 1),]
write.csv(notetext_freq[which(result_sub == 1),],file="notetext111.csv",row.names = FALSE)
notetext_nchar_we = ifelse(notetext_nchar>200,notetext$newtxt,NA)
#截取数据流向,反向处理
notetext_nchar_pp = stri_reverse(notetext_nchar_we)
notetext_nchar_oo = str_extract(notetext_nchar_pp,".+\n")
notetext_nchar_oi = stri_reverse(notetext_nchar_oo)
notetext_nchar_oi = factor(notetext_nchar_oi)
#善用sort，便于显示
notetext_freq  = sort(table(notetext_nchar_oi))
#提取出相对应的项目
notetext_new = data.frame(notetext,notetext_nchar_oi)
notetext_freq = data.frame(notetext_freq)
write.csv(notetext_freq,file="notetext_freq.csv",row.names = FALSE)
write.csv(notetext_freq,file="notetext_freq.csv",row.names = FALSE)
###choose the attributes which not start with -,or num [[:alpha:]]
subtext = str_sub(notetext_freq$notetext_nchar_oi,start = 2 , end = 2)
result_sub = ifelse(str_detect(subtext,"[[:alpha:]]"),1,0 )
notetext[which(result_sub == 1),]
#展示的数据点，就是不以开头的数据
notetext_freq[which(result_sub == 1),]
write.csv(notetext_freq[which(result_sub == 1),],file="notetext111.csv",row.names = FALSE)
notetext = dbGetQuery(con,"SELECT * FROM mimiciii.notetext_sepsis3018")
dim(notetext)
notetext_nchar = nchar(notetext$newtxt)
notetext_nchar_we = ifelse(notetext_nchar>200,notetext$newtxt,NA)
#截取数据流向,反向处理
notetext_nchar_pp = stri_reverse(notetext_nchar_we)
notetext_nchar_oo = str_extract(notetext_nchar_pp,".+\n")
notetext_nchar_oi = stri_reverse(notetext_nchar_oo)
notetext_nchar_oi = factor(notetext_nchar_oi)
#善用sort，便于显示
notetext_freq  = sort(table(notetext_nchar_oi))
#提取出相对应的项目
notetext_new = data.frame(notetext,notetext_nchar_oi)
notetext_freq = data.frame(notetext_freq)
write.csv(notetext_freq,file="notetext_freq.csv",row.names = FALSE)
###choose the attributes which not start with -,or num [[:alpha:]]
subtext = str_sub(notetext_freq$notetext_nchar_oi,start = 2 , end = 2)
result_sub = ifelse(str_detect(subtext,"[[:alpha:]]"),1,0 )
notetext[which(result_sub == 1),]
#展示的数据点，就是不以开头的数据
notetext_freq[which(result_sub == 1),]
write.csv(notetext_freq[which(result_sub == 1),],file="notetext111.csv",row.names = FALSE)
write.csv(notetext,file="notetext.csv",row.names = FALSE)
length(na.omit(notetext$newtxt))
notetext_nchar
sample(na.omit(notetext),2)
?sample
temp = na.omit(notetext)
sample(temp,2)
zz = sample(temp,1)
View(zz)
zz = sample(temp$row_id,200)
ttemp = temp[zz,]
View(ttemp)
View(temp)
temp = temp
View(temp)
length(temp)
dim(temp)[1]
zz = sample(c(1:dim(temp)[1]),200)
zz
ttemp = temp[zz,]
View(temp)
write.csv(ttemp,file="sample200.csv",row.names = FALSE)
notetext = dbGetQuery(con,"SELECT * FROM mimiciii.notetext")
m <- dbDriver("PostgreSQL")
con <- dbConnect(m, user="postgres", password="huayin303",host="10.73.7.139", dbname="mimicv14")
notetext = dbGetQuery(con,"SELECT * FROM mimiciii.notetext")
write.csv(ttemp,file="notetext_category_discharge_summary_PMH.csv",row.names = FALSE)
gc()
rm(notetext)
con <- dbConnect(m, user="postgres", password="huayin303",host="10.73.7.139", dbname="mimicv14")
notetext = dbGetQuery(con,"SELECT * FROM mimiciii.notetext")
write.csv(ttemp,file="notetext_category_discharge_summary_PMH.csv",row.names = FALSE)
View(notetext)
write.csv(notetext,file="notetext_category_discharge_summary_PMH.csv",row.names = FALSE)
